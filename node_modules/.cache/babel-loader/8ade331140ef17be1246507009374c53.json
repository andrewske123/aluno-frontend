{"ast":null,"code":"var _jsxFileName = \"C:\\\\aulas\\\\Web-NodeJs-ReactJS-Projeto-Aluno\\\\Projeto-Aluno\\\\aluno-frontend\\\\src\\\\pages\\\\Tasks\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport moment from 'moment';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  async function loadTasks() {\n    const response = await api.get('/tasks');\n    console.log(response);\n    setTasks(response.data);\n  }\n\n  function formatDate(date) {\n    return moment(date).format('DD/MM/YYYY');\n  }\n\n  function newTask() {\n    history.push('/tarefas_cadastro');\n  }\n\n  function editTask(id) {\n    history.push(`/tarefas_cadastro/${id}`);\n  }\n\n  function viewTask(id) {\n    history.push(`/tarefas/${id}`);\n  }\n\n  async function finishedTask(id) {\n    await api.patch(`/tasks/${id}`);\n    loadTasks();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        size: \"sm\",\n        onClick: newTask,\n        children: \"Novo Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Idade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data de Nascimento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Situa\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"A\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.idade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.ra\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(task.dataNasc)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.Matriculado ? \"Matriculado\" : \"Matriculado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              disabled: task.Matriculado,\n              variant: \"primary\",\n              onClick: () => editTask(task.id),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              disabled: task.Matriculado,\n              variant: \"success\",\n              onClick: () => finishedTask(task.id),\n              children: \"Finalizar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              variant: \"warning\",\n              onClick: () => viewTask(task.id),\n              children: \"Visualizar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              variant: \"danger\",\n              children: \"Remover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasks, \"VhT7IMleaB8K5zMkoC+b1EhCX8k=\", false, function () {\n  return [useHistory];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/aulas/Web-NodeJs-ReactJS-Projeto-Aluno/Projeto-Aluno/aluno-frontend/src/pages/Tasks/index.tsx"],"names":["React","useState","useEffect","Table","Button","useHistory","api","moment","Tasks","tasks","setTasks","history","loadTasks","response","get","console","log","data","formatDate","date","format","newTask","push","editTask","id","viewTask","finishedTask","patch","map","task","nome","idade","ra","dataNasc","Matriculado"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,aAAP;;;AAWA,MAAMC,KAAe,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAU,EAAV,CAAlC;AACA,QAAMU,OAAO,GAAGN,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,SAAf,GAA2B;AACvB,UAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAQ,QAAR,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAH,IAAAA,QAAQ,CAACG,QAAQ,CAACI,IAAV,CAAR;AACH;;AAED,WAASC,UAAT,CAAoBC,IAApB,EAA+B;AAC3B,WAAOZ,MAAM,CAACY,IAAD,CAAN,CAAaC,MAAb,CAAoB,YAApB,CAAP;AACH;;AAED,WAASC,OAAT,GAAkB;AACdV,IAAAA,OAAO,CAACW,IAAR,CAAa,mBAAb;AACH;;AAED,WAASC,QAAT,CAAkBC,EAAlB,EAA6B;AACzBb,IAAAA,OAAO,CAACW,IAAR,CAAc,qBAAoBE,EAAG,EAArC;AACH;;AAED,WAASC,QAAT,CAAkBD,EAAlB,EAA6B;AACzBb,IAAAA,OAAO,CAACW,IAAR,CAAc,YAAWE,EAAG,EAA5B;AACH;;AAED,iBAAeE,YAAf,CAA4BF,EAA5B,EAAuC;AACnC,UAAMlB,GAAG,CAACqB,KAAJ,CAAW,UAASH,EAAG,EAAvB,CAAN;AACAZ,IAAAA,SAAS;AACZ;;AAGD,sBAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAuB,QAAA,IAAI,EAAC,IAA5B;AAAiC,QAAA,OAAO,EAAES,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,SAAS,EAAC,aAAxC;AAAA,8BACI;AAAA,+BACI;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAA,kBAEQZ,KAAK,CAACmB,GAAN,CAAUC,IAAI,iBACV;AAAA,kCACI;AAAA,sBAAKA,IAAI,CAACL;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKK,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,sBAAKd,UAAU,CAACW,IAAI,CAACI,QAAN;AAAf;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA,sBAAKJ,IAAI,CAACK,WAAL,GAAmB,aAAnB,GAAmC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,IAAb;AAAkB,cAAA,QAAQ,EAAEL,IAAI,CAACK,WAAjC;AAA8C,cAAA,OAAO,EAAC,SAAtD;AAAgE,cAAA,OAAO,EAAE,MAAMX,QAAQ,CAACM,IAAI,CAACL,EAAN,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EACsH,GADtH,eAEI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,IAAb;AAAkB,cAAA,QAAQ,EAAEK,IAAI,CAACK,WAAjC;AAA8C,cAAA,OAAO,EAAC,SAAtD;AAAgE,cAAA,OAAO,EAAE,MAAMR,YAAY,CAACG,IAAI,CAACL,EAAN,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAE6H,GAF7H,eAGI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,IAAb;AAAkB,cAAA,OAAO,EAAC,SAA1B;AAAoC,cAAA,OAAO,EAAE,MAAMC,QAAQ,CAACI,IAAI,CAACL,EAAN,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAG8F,GAH9F,eAII,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,IAAb;AAAkB,cAAA,OAAO,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,EAIwD,GAJxD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA,WAASK,IAAI,CAACL,EAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA6CH,CAlFD;;GAAMhB,K;UAGcH,U;;;KAHdG,K;AAoFN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport api from '../../services/api';\r\nimport moment from 'moment';\r\nimport './index.css';\r\n \r\ninterface ITask{\r\n    id: number;\r\n    nome: string;\r\n    ra: string;\r\n    dataNasc: Date;\r\n    idade: number;\r\n    Matriculado: boolean;\r\n}\r\n \r\nconst Tasks: React.FC = () => {\r\n \r\n    const [tasks, setTasks] = useState<ITask[]>([])\r\n    const history = useHistory()\r\n \r\n    useEffect(() => {\r\n        loadTasks()\r\n    }, [])\r\n \r\n    async function loadTasks() {\r\n        const response = await api.get('/tasks')\r\n        console.log(response);\r\n        setTasks(response.data)\r\n    }\r\n \r\n    function formatDate(date: Date){\r\n        return moment(date).format('DD/MM/YYYY')\r\n    }\r\n \r\n    function newTask(){\r\n        history.push('/tarefas_cadastro')\r\n    }\r\n\r\n    function editTask(id: number){\r\n        history.push(`/tarefas_cadastro/${id}`)\r\n    }\r\n\r\n    function viewTask(id: number){\r\n        history.push(`/tarefas/${id}`)\r\n    }\r\n\r\n    async function finishedTask(id: number){\r\n        await api.patch(`/tasks/${id}`)\r\n        loadTasks()\r\n    }\r\n\r\n \r\n    return (\r\n        \r\n        <div className=\"container\">\r\n            <br />\r\n            <div className=\"task-header\">\r\n                <h1>Cadastros</h1>\r\n                <Button variant=\"dark\" size=\"sm\" onClick={newTask}>Novo Cadastro</Button>\r\n            </div>\r\n            <br />\r\n            <Table striped bordered hover className=\"text-center\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>ID</th>\r\n                    <th>Nome</th>\r\n                    <th>Idade</th>\r\n                    <th>Ra</th>\r\n                    <th>Data de Nascimento</th>\r\n                    <th>Situação</th>\r\n                    <th>Ação</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        tasks.map(task => (\r\n                            <tr key={task.id}>\r\n                                <td>{task.id}</td>\r\n                                <td>{task.nome}</td>\r\n                                <td>{task.idade}</td>\r\n                                <td>{task.ra}</td>\r\n                                <td>{formatDate(task.dataNasc)}</td>\r\n                                <td>{task.Matriculado ? \"Matriculado\" : \"Matriculado\"}</td>\r\n                                <td>\r\n                                    <Button size=\"sm\" disabled={task.Matriculado} variant=\"primary\" onClick={() => editTask(task.id)}>Editar</Button>{' '}\r\n                                    <Button size=\"sm\" disabled={task.Matriculado} variant=\"success\" onClick={() => finishedTask(task.id)}>Finalizar</Button>{' '}\r\n                                    <Button size=\"sm\" variant=\"warning\" onClick={() => viewTask(task.id)}>Visualizar</Button>{' '}\r\n                                    <Button size=\"sm\" variant=\"danger\">Remover</Button>{' '}\r\n                                </td>\r\n\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}