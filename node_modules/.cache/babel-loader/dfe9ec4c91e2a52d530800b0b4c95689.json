{"ast":null,"code":"var _jsxFileName = \"C:\\\\aulas\\\\Web-NodeJs-ReactJS-Projeto-Aluno\\\\Projeto-Aluno\\\\aluno-frontend\\\\src\\\\pages\\\\Tasks\\\\Form\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport api from '../../../services/api';\nimport './index.css';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [model, setModel] = useState({\n    nome: '',\n    ra: ''\n  });\n  useEffect(() => {\n    console.log(id);\n\n    if (id != undefined) {\n      findTask(id);\n    }\n  }, [id]);\n\n  function updatedModel(e) {\n    setModel({ ...model,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    if (id != undefined) {\n      const response = await api.put(`/tasks/${id}`, model);\n    } else {\n      const response = await api.post('/tasks', model);\n    }\n\n    back();\n  }\n\n  function back() {\n    history.goBack();\n  }\n\n  async function findTask(id) {\n    const response = await api.get(`tasks/${id}`);\n    console.log(response);\n    setModel({\n      nome: response.data.title,\n      description: response.data.description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Novo cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        size: \"sm\",\n        onClick: back,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"nome\",\n            value: model.nome,\n            onChange: e => updatedModel(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Idade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            min: \"0\",\n            type: \"number\",\n            name: \"idade\",\n            onChange: e => updatedModel(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Ra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"ra\",\n            value: model.ra,\n            onChange: e => updatedModel(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Data de Nascimento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            name: \"dataNasc\",\n            onChange: e => updatedModel(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasks, \"Hk7eEw71BKezLDu370OlMBXkR+c=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/aulas/Web-NodeJs-ReactJS-Projeto-Aluno/Projeto-Aluno/aluno-frontend/src/pages/Tasks/Form/index.tsx"],"names":["React","useState","useEffect","Button","Form","api","useHistory","useParams","Tasks","history","id","model","setModel","nome","ra","console","log","undefined","findTask","updatedModel","e","target","name","value","onSubmit","preventDefault","response","put","post","back","goBack","get","data","title","description"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent, useEffect } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport api from '../../../services/api';\r\nimport './index.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n \r\ninterface ITask{\r\n    nome: string;\r\n   \r\n    ra: string;\r\n\r\n}\r\n \r\nconst Tasks: React.FC = () => {\r\n \r\n    const history = useHistory()\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    const [model, setModel] = useState<ITask>({\r\n        nome: '',\r\n\r\n        ra: ''   \r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(id)\r\n        if (id != undefined) {\r\n            findTask(id)\r\n        }\r\n    }, [id])\r\n\r\n\r\n\r\n    function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n        setModel({\r\n            ...model,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n \r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>){\r\n        e.preventDefault()\r\n        \r\n        if (id != undefined) {\r\n            const response = await api.put(`/tasks/${id}`, model)\r\n        }\r\n        else{\r\n            const response = await api.post('/tasks', model)\r\n        }\r\n        back()\r\n    }\r\n\r\n    function back(){\r\n        history.goBack()\r\n    }\r\n\r\n    async function findTask(id: string){\r\n        const response = await api.get(`tasks/${id}`)\r\n        console.log(response)\r\n        setModel({\r\n            nome: response.data.title,\r\n            description: response.data.description\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container\">\r\n            <br />\r\n            <div className=\"task-header\">\r\n                <h1>Novo cadastro</h1>\r\n                <Button variant=\"dark\" size=\"sm\" onClick={back}>Voltar</Button>\r\n            </div>\r\n            <br />\r\n            <div className=\"container\">\r\n                <Form onSubmit={onSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Nome</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"nome\"\r\n                            value={model.nome}\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label >Idade</Form.Label>\r\n                        <Form.Control\r\n                            min=\"0\"\r\n                            type=\"number\"\r\n                            name=\"idade\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Ra</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"ra\"\r\n                            value={model.ra}\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Data de Nascimento</Form.Label>\r\n                        <Form.Control\r\n                            type=\"date\"\r\n                            name=\"dataNasc\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}/>\r\n                    </Form.Group>\r\n \r\n \r\n                    <Button variant=\"dark\" type=\"submit\">\r\n                        Salvar\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}