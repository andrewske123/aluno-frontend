{"ast":null,"code":"var _jsxFileName = \"C:\\\\aulas\\\\Web-NodeJs-ReactJS-Projeto-Aluno\\\\Projeto-Aluno\\\\aluno-frontend\\\\src\\\\pages\\\\Tasks\\\\Form\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport api from '../../../services/api';\nimport './index.css';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [model, setModel] = useState({\n    title: '',\n    description: ''\n  });\n  useEffect(() => {\n    console.log(id);\n    findTask(id);\n  }, [id]);\n\n  function updatedModel(e) {\n    setModel({ ...model,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const response = await api.post('/tasks', model);\n    console.log(response);\n  }\n\n  function back() {\n    history.goBack();\n  }\n\n  async function findTask(id) {\n    const response = await api.get(`tasks/${id}`);\n    console.log(response);\n    setModel({\n      title: response.data.title,\n      description: response.data.description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nova Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        size: \"sm\",\n        onClick: back,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"T\\xEDtulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"title\",\n            value: model.title,\n            onChange: e => updatedModel(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            name: \"description\",\n            value: model.description,\n            onChange: e => updatedModel(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasks, \"7K39n8mxgv9X/J1UmKKoTnK7AV4=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/aulas/Web-NodeJs-ReactJS-Projeto-Aluno/Projeto-Aluno/aluno-frontend/src/pages/Tasks/Form/index.tsx"],"names":["React","useState","useEffect","Button","Form","api","useHistory","useParams","Tasks","history","id","model","setModel","title","description","console","log","findTask","updatedModel","e","target","name","value","onSubmit","preventDefault","response","post","back","goBack","get","data"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent, useEffect } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport api from '../../../services/api';\r\nimport './index.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n \r\ninterface ITask{\r\n    title: string;\r\n    description: string;\r\n}\r\n \r\nconst Tasks: React.FC = () => {\r\n    \r\n    const history = useHistory()\r\n    const { id } = useParams<{ id: string }>()\r\n \r\n    const [model, setModel] = useState<ITask>({\r\n        title: '',\r\n        description: ''\r\n    })\r\n \r\n    useEffect(() => {\r\n        console.log(id)\r\n        findTask(id)\r\n    }, [id])\r\n \r\n    function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n        setModel({\r\n            ...model,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n \r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>){\r\n        e.preventDefault()\r\n        \r\n        const response = await api.post('/tasks', model)\r\n \r\n        console.log(response)\r\n    }\r\n \r\n    function back(){\r\n        history.goBack()\r\n    }\r\n \r\n    async function findTask(id: string){\r\n        const response = await api.get(`tasks/${id}`)\r\n        console.log(response)\r\n        setModel({\r\n            title: response.data.title,\r\n            description: response.data.description\r\n        })\r\n    }\r\n \r\n    return (\r\n        \r\n        <div className=\"container\">\r\n            <br />\r\n            <div className=\"task-header\">\r\n                <h1>Nova Tarefa</h1>\r\n                <Button variant=\"dark\" size=\"sm\" onClick={back}>Voltar</Button>\r\n            </div>\r\n            <br />\r\n            <div className=\"container\">\r\n                <Form onSubmit={onSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>TÃ­tulo</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            value={model.title}\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}/>\r\n                    </Form.Group>\r\n \r\n                    <Form.Group>\r\n                        <Form.Label>DescriÃ§Ã£o</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            name=\"description\"\r\n                            value={model.description}\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}/>\r\n                    </Form.Group>\r\n \r\n                    <Button variant=\"dark\" type=\"submit\">\r\n                        Salvar\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}